<?php
/**
 * @file
 * Code for the Bibsdb Search Context feature.
 */

include_once 'bibsdb_search_context.features.inc';

/**
 * Implements preprocess function for the search context.
 * Make it possible to track specific contexts in webtrends.
 */
function bibsdb_search_context_preprocess_ting_search_context(&$vars, $hook) {
	$context = ting_search_context_load($vars['context_id'], FALSE);
  // Strip special characters and spaces
	$context_name = preg_replace('@[^a-z0-9-]+@','-', strtolower($context->name));

  // Add Javascript settings
	drupal_add_js(array('ting_search_context_name' => $context_name), 'setting');

  // Add js script
	$path = drupal_get_path('module', 'bibsdb_search_context');
	drupal_add_js($path . '/js/bibsdb_search_context.js');
}

/**
 * Implements hook_ting_search_context_field_name().
 */
function bibsdb_search_context_ting_search_context_field_name() {
	return array(
		'ding_group' => 'field_ding_group_list_image',
		);
}

/**
 * Implements preprocess function for the search context content.
 * Note - There is dublicate code in bibsdb_expose.module in bibsdb_expose_build_url.
 * Support internal link field in ding_search_context_link.
 * The derived url is created upon saving the node but is recreated when the node is shown by Search Context Module or Expose module, 
 * because there is a risk that the link is stale if the node has been renamed.
 */
function bibsdb_search_context_preprocess_ting_search_context_content(&$vars, $hook) {
	$node = $vars['node'];
	$wrapper = entity_metadata_wrapper('node', $node);
	if ($node->type == 'ding_search_context_link') {
		
		$internal = $wrapper->field_bibsdb_internal_link;

		if ($internal->value() != null) {
			$url = url('node/' . $internal->getIdentifier(), array('absolute' => TRUE, 'query' => array('WT.ac' => 'searchcontext')));
			$vars['url'] = $url;
		}
	}
}